<div class="animated fadeIn">
    <h1>Magazzino</h1>
    <h2>Gestisci il magazzino aziendale</h2>
</div>

<div id="app-warehouse">

    <div class="consumable-newitem-container">
        <span class="consumable-label">Nome</span>
        <input class="consumable-textbox" type="text" v-model="newItem.name" />

        <span class="consumable-label">Categoria</span>
        <input class="consumable-textbox" type="text" v-model="newItem.category" />

        <span class="consumable-label">Descrizione</span>
        <input class="consumable-textbox" type="text" v-model="newItem.description" />

        <button class="button-green" v-on:click="createNewItem(newItem)">Nuovo oggetto di magazzino</button>

        <transition name="fade">
            <span class="error-label" v-if="errorMessagePresent">
                {{ errorMessage }}
            </span>
        </transition>
        
    </div>

    <ul>

        <transition-group name="list-complete" tag="li">

            <li v-for="warehouseObject in warehouseObjects" v-bind:key="warehouseObject.qrCode" class="consumable-container someobject-container list-complete-item">

                <div>
                    <div class="consumable-image consumable-property">
                        <img :src="warehouseObject.picture" width="160px" />
                    </div>
                </div>

                <div class="consumable-details">
                    <div class="consumable-name consumable-property">
                        {{ warehouseObject.name }}
                    </div>

                    <div class="consumable-name consumable-property">
                        {{ warehouseObject.category }}
                    </div>

                    <div class="consumable-description consumable-property">
                        {{ warehouseObject.description }}
                    </div>


                    <div class="consumable-description consumable-property">
                        Proprietario: <b>{{ warehouseObject.proprietario }}</b>
                    </div>

                    <div class="line"></div>


                    <div class="buttons-container">

                        <div class="consumable-property horizontally-spaced">
                            <button class="button-black" v-on:click="printQr(warehouseObject.qrCode, warehouseObject.name, 1)">Stampa codice 1x</button>
                        </div>

                        <div class="consumable-property horizontally-spaced">
                            <button class="button-black" v-on:click="printQr(warehouseObject.qrCode, warehouseObject.name, 2)">Stampa codice 2x</button>
                        </div>

                        <div class="consumable-property horizontally-spaced">
                            <button class="button-black" v-on:click="printQr(warehouseObject.qrCode, warehouseObject.name, 3)">Stampa codice 3x</button>
                        </div>
                    </div>

                </div>

            </li>
        </transition-group>

    </ul>

</div>


<script>

    var allWarehouseObjects = [];

    function refreshData() {

        $.get("/Warehouse/GetAll")
            .done(function (response) {
                allWarehouseObjects = response;
                warehouseApp.warehouseObjects = allWarehouseObjects;
                warehouseApp.errorMessage = "";
                warehouseApp.errorMessagePresent = false;
            })
            .fail(function () {
                errorMessage = response;
                errorMessagePresent = true;
            });

    };

    var warehouseApp = new Vue({
        el: '#app-warehouse',
        data: {
            warehouseObjects: allWarehouseObjects,
            newItem: {
                name: "",
                category: "",
                description: ""
            },
            errorMessage: "",
            errorMessagePresent: false
        },
        methods: {

            printQr: function (id, name, size) {

                window.open("/Pages/PrintQr?id=" + id + "&name=" + name + "&size=" + size);

            },
            createNewItem: function (newItemObject) {

                if (newItemObject.name == "" || newItemObject.category == "") {
                    this.errorMessage = "Campi inseriti non corretti";
                    this.errorMessagePresent = true;
                    return;
                }

                $.ajax({
                    type: "POST",
                    url: "/Warehouse/Create",
                    data: JSON.stringify(newItemObject),
                    contentType: "application/json",
                    success: function (data) {
                        warehouseApp.newItem.name = "";
                        warehouseApp.newItem.category = "";
                        warehouseApp.newItem.description = "";
                        refreshData();
                    },
                    error: function (data) {

                        warehouseApp.errorMessage = data.responseText;
                        warehouseApp.errorMessagePresent = true;
                    }
                });
            }
        }
    });

    refreshData();
    window.setInterval(refreshData, 1000);

</script>